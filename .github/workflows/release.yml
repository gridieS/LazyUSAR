name: Build and release to github

on:
    workflow_dispatch:
        inputs:
            prerelease:
                description: "Mark as pre-release"
                required: false
                default: false
                type: boolean

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_version.outputs.version }}
            target_tag: ${{ steps.get_version.outputs.version }}
            target_repo: ${{ github.repository }}
            head_sha: ${{ github.sha }}
        steps:
            - name: Get version
              id: get_version
              run: echo "version=$(date +v%Y.%m.%d)" >> "$GITHUB_OUTPUT"

    build-windows:
        needs: prepare
        runs-on: windows-latest
        steps:
            - name: Create and upload Windows executable
              uses: sayyid5416/pyinstaller@v1
              with:
                  python_ver: "3.10"
                  spec: "build-windows.spec"
                  upload_exe_with_name: "windows"

    build-linux:
        needs: prepare
        runs-on: ubuntu-latest
        steps:
            - name: Create and upload Linux binary
              uses: sayyid5416/pyinstaller@v1
              with:
                  python_ver: "3.10"
                  spec: "build-linux.spec"
                  upload_exe_with_name: "linux-x86_64"

    release:
        needs: [prepare, build-windows, build-linux]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Download Windows artifact
              uses: actions/download-artifact@v4
              with:
                  name: windows
                  path: artifact

            - name: Download Linux artifact
              uses: actions/download-artifact@v4
              with:
                  name: linux-x86_64
                  path: artifact

            - name: Publish release
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  version: ${{ needs.prepare.outputs.version }}
                  target_repo: ${{ needs.prepare.outputs.target_repo }}
                  target_tag: ${{ needs.prepare.outputs.target_tag }}
                  head_sha: ${{ needs.prepare.outputs.head_sha }}
              if: env.target_repo == github.repository
              run: |
                  title="LazyUSAR ${version}"
                  gh release create \
                  --notes "Automated release for version ${{ env.version }}" \
                  --target "${{ env.head_sha }}" \
                  --title "${title}" \
                  ${{ github.event.inputs.prerelease == 'true' && '--prerelease' || '' }} \
                  "${{ env.target_tag }}" \
                  artifact/LazyUSAR.exe \
                  artifact/LazyUSAR.bin
